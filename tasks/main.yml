---
# tasks file for docker-registry

# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: initialize images fact
  set_fact:
    images:
      - { repository: "registry", tag: "{{ registry_version }}" }
  when:
    images_cache_path is defined
  tags:
    - docker-registry 

- name: load {{ images }} from cache
  include_tasks: retrieve_container_image.yml
  loop: "{{ images }}"
  when:
    images_cache_path is defined
  tags:
    - docker-registry  

- name: copy to docker-registry files to /home/{{ ansible_user_id }}/docker-registry
  copy:
    src: files/
    dest: /home/{{ ansible_user_id }}/docker-registry
  tags:
    - docker-registry 

- name: template files into /home/{{ ansible_user_id }}/docker-registry
  template:
    src: templates/{{ item }}.j2
    dest: /home/{{ ansible_user_id }}/docker-registry/{{ item }}
  with_items:
    - "README.MD"
    - "registry/Dockerfile"
    - "passthrough-registry/Dockerfile"
    - "registry_dockerfile_build.sh"
    - "passthrough_registry_dockerfile_build.sh"
  tags:
    - docker-registry 

- name: make /home/{{ ansible_user_id }}/docker-registry/registry_dockerfile_build.sh executable
  file: 
    path: /home/{{ ansible_user_id }}/docker-registry/registry_dockerfile_build.sh
    mode: "u=rwx,g=r,o=r"  
  tags:
    - docker-registry 

- name: make /home/{{ ansible_user_id }}/docker-registry/passthrough_registry_dockerfile_build.sh executable
  file:
    path: /home/{{ ansible_user_id }}/docker-registry/passthrough_registry_dockerfile_build.sh
    mode: "u=rwx,g=r,o=r"
  tags:
    - docker-registry

- name: build nemonik/registry:{{ registry_version }} docker image 
  docker_image:
    name: nemonik/registry:{{ registry_version }}
    source: build
    build:
      path: /home/{{ ansible_user_id }}/docker-registry/registry
      pull: yes
      args:
        http_proxy: "{{ http_proxy|default('') }}"
        HTTP_PROXY: "{{ http_proxy|default('') }}"
        https_proxy: "{{ https_proxy|default('') }}"
        HTTPS_PROXY: "{{ https_proxy|default('') }}"
        NO_PROXY: "{{ no_proxy|default('') }}"
        no_proxy: "{{ no_proxy|default('') }}" 
  retries: "{{ default_retries }}" 
  delay: "{{ default_delay }}"
  register: result
  until: result is succeeded
  when:
    - registry == 'yes'
  tags:
    - docker-registry 

- name: build nemonik/passthrough-registry:{{ registry_version }} docker image
  docker_image:
    name: nemonik/passthrough-registry:{{ registry_version }}
    source: build
    build:
      path: /home/{{ ansible_user_id }}/docker-registry/passthrough-registry
      pull: yes
      args:
        http_proxy: "{{ http_proxy|default('') }}"
        HTTP_PROXY: "{{ http_proxy|default('') }}"
        https_proxy: "{{ https_proxy|default('') }}"
        HTTPS_PROXY: "{{ https_proxy|default('') }}"
        NO_PROXY: "{{ no_proxy|default('') }}"
        no_proxy: "{{ no_proxy|default('') }}"
  retries: "{{ default_retries }}"
  delay: "{{ default_delay }}"
  register: result
  until: result is succeeded
  when:
    - passthrough_registry == 'yes'
  tags:
    - docker-registry

- name: spin up container registry via Kubernetes, when registry_deploy_via is equal `kubernetes`
  block:
  - name: template kubernetes resource files into /home/{{ ansible_user_id }}/docker-registry
    template:
      src: templates/registry.yml.j2
      dest: /home/{{ ansible_user_id }}/docker-registry/registry.yml

  - name: spin up via kubectl
    shell: kubectl --kubeconfig=/home/{{ ansible_user_id }}/kubeconfig.yml apply -f registry.yml
    args:
      chdir: /home/{{ ansible_user_id }}/docker-registry

  - name: wait for registry to spin up
    shell: kubectl --kubeconfig=/home/{{ ansible_user_id }}/kubeconfig.yml -n registry get pod | grep Running
    retries: "{{ default_retries }}"
    delay: "{{ default_delay }}"
    register: retry_result
    until: retry_result is succeeded
  when: 
    - registry_deploy_via == 'kubernetes'
  tags:
    - docker-registry

- name: spin up Docker Registry via docker-compose, when registry_deploy_via is equal `docker-compose`
  block:
  - name: "template docker-compose.yml into /home/{{ ansible_user_id }}/docker-registry"
    template:
      src: templates/docker-compose.yml.j2
      dest: "/home/{{ ansible_user_id }}/docker-registry/docker-compose.yml"
  
  - name: spin up via docker-compose
    docker_compose:
      build: no
      debug: yes
      project_src: "/home/{{ ansible_user_id }}/docker-registry"
  when: 
    - registry_deploy_via == "docker-compose"
  tags:
    - docker-registry

- name: save {{ images }} to cache
  include_tasks: cache_container_image.yml
  loop: "{{ images }}"
  tags:
    - docker-registry
